/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ignite.models;

import java.io.*;

import org.apache.ignite.cache.query.annotations.QuerySqlField;

/**
 * Person definition.
 *
 * Code generated by Apache Ignite Schema Import utility: 08/19/2016.
 */
public class Person implements Serializable {
    /** */
    private static final long serialVersionUID = 0L;

    /** Value for age. */
    @QuerySqlField
    private Integer age;

    /** Value for name. */
    @QuerySqlField
    private String name;

    /** Value for address. */
    @QuerySqlField
    private String address;

    /**
     * Empty constructor.
     */
    public Person() {
        // No-op.
    }

    /**
     * Full constructor.
     */
    public Person(
    		Integer age,
        String name,
        String address
    ) {
        this.age = age;
        this.name = name;
        this.address = address;
    }

    /**
     * Gets age.
     *
     * @return Value for age.
     */
    public Integer getAge() {
        return age;
    }

    /**
     * Sets age.
     *
     * @param age New value for age.
     */
    public void setAge(Integer age) {
        this.age = age;
    }

    /**
     * Gets name.
     *
     * @return Value for name.
     */
    public String getName() {
        return name;
    }

    /**
     * Sets name.
     *
     * @param name New value for name.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Gets address.
     *
     * @return Value for address.
     */
    public String getAddress() {
        return address;
    }

    /**
     * Sets address.
     *
     * @param address New value for address.
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /** {@inheritDoc} */
    @Override public boolean equals(Object o) {
        if (this == o)
            return true;

        if (!(o instanceof Person))
            return false;

        Person that = (Person)o;

        if (age != null ? !age.equals(that.age) : that.age != null)
            return false;

        if (name != null ? !name.equals(that.name) : that.name != null)
            return false;

        if (address != null ? !address.equals(that.address) : that.address != null)
            return false;

        return true;
    }

    /** {@inheritDoc} */
    @Override public int hashCode() {
        int res = age != null ? age.hashCode() : 0;

        res = 31 * res + (name != null ? name.hashCode() : 0);

        res = 31 * res + (address != null ? address.hashCode() : 0);

        return res;
    }

    /** {@inheritDoc} */
    @Override public String toString() {
        return "Person [age=" + age +
            ", name=" + name +
            ", address=" + address +
            "]";
    }
}

